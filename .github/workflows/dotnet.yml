name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  BuildAndTest:

    runs-on: [self-hosted, Linux]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --logger trx --verbosity normal
    - name: Test Report    
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Dotnet Tests 
        path: TestResults/**/*.trx
        path-replace-backslashes: 'false'
        reporter: 'dotnet-trx'
        only-summary: 'false'
        list-suites: 'all'
        list-tests: 'all'
        max-annotations: '10'
        fail-on-error: 'true'
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      if: success() || failure()
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      if: success() || failure()
      # Force to fail step after specific time.
      timeout-minutes: 5
      with:
        scanMetadataReportFile: .sonarqube/out/.sonar/report-task.txt
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
